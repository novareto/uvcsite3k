[buildout]
extends = versions.cfg
extends-cache = extends-cache
develop = . 
parts =
    app
    console
    daemon
    paster_ini_deploy
    mkdirs
    site_zcml
    test
    zope_conf_deploy
#    interactive_debugger
    omelette
newest = false
versions = versions
show-picked-versions = true
extensions = 
    mr.developer


# dev
sources-dir = src
sources = sources
auto-checkout = 
    grokui.admin 
    grokui.base
    zeam.form.base
    zeam.form.ztk
    uvc.siguvtheme
    uvc.example

[versions]
# Override versions here.

[omelette]
recipe = collective.recipe.omelette
eggs = ${app:eggs}

[app]
recipe = zc.recipe.egg
eggs = uvcsite
       Paste
       PasteScript
       PasteDeploy
       waitress
       pdbpp 
       uvc.siguvtheme
       uvc.example

[daemon]
recipe = collective.recipe.scriptgen
cmd = ${buildout:bin-directory}/paster
arguments = serve ${buildout:parts-directory}/etc/deploy.ini
    --daemon --pid-file=${buildout:directory}/var/daemon.pid
    --log-file=${buildout:directory}/var/log/daemon.log

[paster_ini_deploy]
recipe = collective.recipe.template
input = etc/deploy.ini.in
output = ${buildout:parts-directory}/etc/deploy.ini
host = 127.0.0.1
port = 8080

[mkdirs]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/log
    ${zope_conf:filestorage}
    ${zope_conf:blobstorage}

[site_zcml]
recipe = collective.recipe.template
input = etc/site.zcml.in
output = ${buildout:parts-directory}/etc/site.zcml
extra =
  <include package="uvc.siguvtheme" />
  <include package="uvc.example" />
  <include package="uvc.staticcontent" />

[test]
recipe = zc.recipe.testrunner
eggs = uvcsite
defaults = ['-v', '--auto-color', '--auto-progress']

[zope_conf]
input = etc/zope.conf.in
filestorage = ${buildout:directory}/var/filestorage
blobstorage = ${buildout:directory}/var/blobstorage
# 'extra' is copied verbatim. Use it for product config sections and so.
extra =
   <include package="uvc.example" />
   <include package="uvc.siguvtheme" />

[zope_conf_deploy]
<= zope_conf
recipe = collective.recipe.template
output = ${buildout:parts-directory}/etc/zope.deploy.conf
devmode = off

[console]
recipe = zc.recipe.egg:scripts
eggs =
  uvcsite
entry-points =
  python-console=uvcsite.scripts.interpreter:main


[interactive_debugger]
recipe = zc.recipe.egg
eggs = ${app:eggs} 
entry-points =
  interactive_debugger=grokcore.startup.startup:interactive_debug_prompt
arguments = zope_conf="${zope_conf_deploy:output}"
